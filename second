private List<TradeDelta> calculateFinalDeltas(List<RtorDto> rtorList, LocalDate asOfDate) {
    List<TradeDelta> result = new ArrayList<>();

    // Retrieve FX rates for all relevant buckets
    Map<String, FxRate> fxRateMap = fxRateRepo.findRates(asOfDate, "USD");

    // Process the RTOR list
    for (RtorDto rtor : rtorList) {
        if ("JPY".equals(rtor.getBucket())) {
            // Special case for JPY bucket
            FxRate jpyRate = fxRateMap.get("JPY");
            if (jpyRate == null) {
                throw new RuntimeException("FX rate not found for JPY");
            }
            BigDecimal adjustedDelta = rtor.getDelta();
            result.add(new TradeDelta(rtor.getTradeId(), "JPY", adjustedDelta));
        } else {
            // Other buckets
            FxRate fxRate = fxRateMap.get(rtor.getBucket());
            if (fxRate == null) {
                throw new RuntimeException("FX rate not found for bucket: " + rtor.getBucket());
            }

            BigDecimal directionFactor = "N".equals(fxRate.getDirection()) ? BigDecimal.ONE : BigDecimal.ZERO;
            BigDecimal adjustedDelta = rtor.getDelta().multiply(
                directionFactor.multiply(fxRate.getRate())
                        .add(BigDecimal.ONE.subtract(directionFactor).divide(fxRate.getRate(), 10, RoundingMode.HALF_UP))
            );
            result.add(new TradeDelta(rtor.getTradeId(), rtor.getBucket(), adjustedDelta));
        }
    }

    return result;
}
