@Configuration
@EnableConfigurationProperties(UiProperties.class)
public class MultiUiConfig implements WebMvcConfigurer {

    private final UiProperties uiProperties;

    public MultiUiConfig(UiProperties uiProperties) {
        this.uiProperties = uiProperties;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        uiProperties.getApps().forEach((name, path) -> {
            registry.addResourceHandler("/" + name + "/**")
                    .addResourceLocations("file:" + path);
        });
    }
}


package com.example.demo.controller;

import com.example.demo.config.UiProperties;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.Map;

@Controller
public class UiForwardController {

    private final UiProperties uiProperties;

    public UiForwardController(UiProperties uiProperties) {
        this.uiProperties = uiProperties;
    }

    @RequestMapping({"/{app}", "/{app}/"})
    public String forwardIndex(@org.springframework.web.bind.annotation.PathVariable String app) {
        // Only forward if it's one of our configured apps
        for (String configuredApp : uiProperties.getApps().keySet()) {
            if (configuredApp.equals(app)) {
                return "forward:/" + app + "/index.html";
            }
        }
        // otherwise, let Spring handle (could be 404 or another mapping)
        return "forward:/error";
    }
}


@ConfigurationProperties(prefix = "ui")
public class UiProperties {
    private Map<String, String> apps = new HashMap<>();

    public Map<String, String> getApps() {
        return apps;
    }

    public void setApps(Map<String, String> apps) {
        this.apps = apps;
    }
}





server:
  port: 8443

ui:
  apps:
    my-ui: /opt/react-apps/my-ui/
    my-sso-ui: /opt/react-apps/my-sso-ui/
    my-management-ui: /opt/react-apps/my-management-ui/
