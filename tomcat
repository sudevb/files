@Configuration
@EnableConfigurationProperties(UiProperties.class)
public class MultiUiConfig implements WebMvcConfigurer {

    private final UiProperties uiProperties;

    public MultiUiConfig(UiProperties uiProperties) {
        this.uiProperties = uiProperties;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        uiProperties.getApps().forEach((name, path) -> {
            registry.addResourceHandler("/" + name + "/**")
                    .addResourceLocations("file:" + path);
        });
    }
}



@ConfigurationProperties(prefix = "ui")
public class UiProperties {
    private Map<String, String> apps = new HashMap<>();

    public Map<String, String> getApps() {
        return apps;
    }

    public void setApps(Map<String, String> apps) {
        this.apps = apps;
    }
}





server:
  port: 8443

ui:
  apps:
    my-ui: /opt/react-apps/my-ui/
    my-sso-ui: /opt/react-apps/my-sso-ui/
    my-management-ui: /opt/react-apps/my-management-ui/
